name: Push image to Docker

on:
  workflow_dispatch:
    inputs:
      bump_type:
        type: choice
        options:
          - patch
          - minor
          - major
        required: true

jobs:
  bump_version:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bump Version
        shell: bash
        run: |
          bump_type="${{ inputs.bump_type }}"

          version=$(jq -r .version package.json)
          IFS='.' read -r major minor patch <<< "$version"

          case $bump_type in
              major)
                major=$((major + 1))
                minor=0
                patch=0
              ;;

              minor)
                minor=$((minor + 1))
                patch=0
              ;;

              patch)
                patch=$((patch + 1))
              ;;

              *)
                echo "Unknown bump_type: $bump_type"
                exit 1
              ;;
          esac

          version="$major.$minor.$patch"
          echo "Bumping to $version"

          files=$(find . -type f -name package.json -prune)
          for file in $files; do
              echo "$(cat $file | jq ".version = \"$version\"" )" > $file
          done

          git config user.name "Sara Morillon"
          git config user.email "sara.morillon.pro@gmail.com"
          git commit -am "v$version"
          git tag -a "v$version" -m "v$version"
          git push --follow-tags

  push_docker_image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: version
        shell: bash
        run: |
          ref_name="${{ github.ref_name }}"
          version=${ref_name:1}
          echo "VERSION=$version" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: saramorillon/mini-planning:${{ steps.version.outputs.VERSION }},saramorillon/mini-planning:latest

  send_discord_notification:
    runs-on: ubuntu-latest

    needs: push_docker_image

    if: always()

    steps:
      - name: Send Discord notification
        shell: bash
        run: |
          result="${{ needs.push_docker_image.result }}"
          repo_url="[${{ github.repository }}@${{ github.ref_name }}](<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}>)"
          curl -X POST -d "{\"content\":\"Push image $repo_url: **${result^^}**\"}" -H "Content-Type: application/json" ${{ secrets.DISCORD_WEBHOOK }}
